#!/bin/bash
# vim: set ft=bash

SCRIPTDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $SCRIPTDIR/env
source $SCRIPTDIR/usage
source $SCRIPTDIR/config
source $SCRIPTDIR/github
source $SCRIPTDIR/utils

bash_clam() {
    # See if a global flag has been passed
    CLAM_USE_GLOBAL_PATH=
    FILTERED_ARGS=()
    while [[ $# -gt 0 ]]
    do
    case "$1" in
        -g | --global)
            CLAM_USE_GLOBAL_PATH=1
            shift
            ;;
        *)
            FILTERED_ARGS+=("$1")
            shift
            ;;
    esac
    done
    set -- "${FILTERED_ARGS[@]}"

    declare -a sources
    declare -a executables
    case "$1" in
        h | help | -h | --help) 
            usage
            ;;
        l | list) 
			case "$2" in
				-b | --bin)
					ls "$(clam_get_env BIN)"
					;;
				-m | --modules)
					ls "$(clam_get_env MODULES)"
					;;
				-c | --config)
					cat "$(clam_get_env CONFIG)"
					;;
				* ) 
					config_grep "#uri" | sed -e 's/.*#uri=//g'
					;;
			esac
            ;;
        r | run) 
            shift
            local github_project=$(github_module "$1")
            local module_full_path=$(clam_get_full_module_path "$github_project")
            if [ -z "$module_full_path" ]; then
                clam install -g "$github_project"
            fi
            clam_run "$@" || echo "Could not find the specified file."
            ;;
        s | source) 
            shift
            clam_source "$@" || echo "Could not find the specified file."
            ;;
        u | update) 
            local modules=$(config_grep "#name" | sed -e 's/#name.*//g')
            local modules_dir="$(clam_get_env MODULES)"
            [ ! -z "$modules" ] && echo "$modules_dir/$modules" | tr '\n' '\0' | xargs -0 -P10 -I{} bash -c 'github_update "$@"' _ {}
            ;;
        u | uninstall)
            uri=$2
            module=$(clam_slugify "$uri")
            shift 2

            # remove any linked bin command
            command=$(config_get "$module#command")
            if [ ! -z "$command" ]; then
                rm "$(clam_get_env BIN)/$command"
            fi

            #remove the cloned dir
            while true; do
                module_path=$(clam_get_full_module_path $module)
                echo "$module_path"
                if [ -z "$module_path" ]; then
                    break;
                fi
                rm -r $module_path
            done

            # remove it from config
            config_remove "$module"
            ;;

        i | install | "") 
            shift

            local uri=
            local local_module_name=
            while true; do
                case "$1" in
                    -s | --source)
                        sources=( "${sources[@]}" "$2" )
                        shift 2
                        ;;
                    -e | --exe | --copy-exe )
                        executables=( "${executables[@]}" "$2" )
                        shift 2
                        ;;
                    --exe-to | --copy-exe-as )
                        executables=( "${executables[@]}" "$2:_:$3" )
                        shift 3
                        ;;
                    -a | --as)
                        local_module_name="$2"
                        shift 2
                        ;;
                    -* ) 
                        echo "Invalid option: -$1" >&2
						exit 1
                        ;;
                    * ) 
                        if [ -z "$1" ]; then
                            break;
                        else 
                            uri=$1
                            shift
                        fi
                        ;;
                esac
            done

            local bin_dir="$(clam_get_env BIN)"
            local modules_dir="$(clam_get_env MODULES)"

            if [ ! -z "$local_module_name" ]; then
                module="$local_module_name"
            else 
                module=$(clam_slugify "$uri")
            fi
            clam_mkdir "$modules_dir"

            github_clone "$uri" "$modules_dir" "$module"
            config_set "$module#name" "$module"
            config_set "$module#uri" "$uri"
            config_set "$module#sources" "${sources[@]}"
            config_set "$module#executables" "${executables[@]}"

            if [ "${#executables[@]}" -gt 0 ]; then 
                clam_mkdir "$bin_dir"
                for executable in "${executables[@]}"
                do
                    parts=(${executable//:_:/ })
                    src_filename="${parts[0]}"
                    dest_filename="${parts[1]}"
                    if [ -z "$dest_filename" ]; then
                        dest_filename=$src_filename
                    fi
                    dest_filepath="$bin_dir/$(basename "$dest_filename")"
                    cat << EOF > "$dest_filepath"
#!/bin/bash
source $SCRIPTDIR/clam
clam run "$module/$src_filename" "\$@"
EOF
                    chmod +x "$dest_filepath"
                done
            fi
            ;;
		*)
			echo "Invalid command $1" >&2
			exit 1
    esac
}
